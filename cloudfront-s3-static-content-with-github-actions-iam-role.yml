# CloudFormation template for Static website hosting using S3 and CloudFront.
# Resources:
# CloudFront Distribution, OAC(Origin Access Control), and S3 Bucket as origin. Bucket has Bucket Policy to allow Origin Access Control for s3:GetObject
# Also IAM Role for Github Actions to assume so that Github Actions workflow can deploy to S3 Bucket, and can invalidate CloudFront cached old content.

AWSTemplateFormatVersion: 2010-09-09
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Service Parameters"
        Parameters:
          - ServiceName
          - Purpose
          - Phase
          - OriginDomain
      - Label:
          default: "Github Parameters"
        Parameters:
          - GitHubOwner
          - GithubRepository
      - Label:
          default: "ACM Certificate"
        Parameters:
          - CertificateArn

Parameters:
  ServiceName:
    Type: String
  Purpose:
    Type: String
  Phase:
    Type: String
  OriginDomain:
    Type: String
  GitHubOwner:
    Type: String
  GithubRepository:
    Type: String
  CertificateArn:
    Type: String

Resources:
  IAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ServiceName}-${Purpose}-${Phase}-github-role
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Sub arn:aws:iam::${AWS::AccountId}:oidc-provider/token.actions.githubusercontent.com
            Action:
              - sts:AssumeRoleWithWebIdentity
            Condition:
              StringLike:
                "token.actions.githubusercontent.com:sub": !Sub "repo:${GitHubOwner}/${GithubRepository}:*"
      Policies:
        - PolicyName: !Sub ${ServiceName}-${Purpose}-${Phase}-github-cloudfront-policy
          PolicyDocument:
            Version: "2008-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - cloudfront:GetDistribution
                  - cloudfront:GetStreamingDistribution
                  - cloudfront:GetDistributionConfig
                  - cloudfront:ListDistributions
                  - cloudfront:ListCloudFrontOriginAccessIdentities
                  - cloudfront:CreateInvalidation
                  - cloudfront:GetInvalidation
                  - cloudfront:ListInvalidations
                Resource:
                  - !Join [
                      "",
                      [
                        !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/",
                        !Ref CloudFront,
                      ],
                    ]
        - PolicyName: !Sub ${ServiceName}-${Purpose}-${Phase}-github-s3-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${OriginDomain}
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:DeleteObject
                Resource:
                  - !Sub arn:aws:s3:::${OriginDomain}/*

  # S3 Bucket
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref OriginDomain

  # S3 Bucket Policy which allows CloudFront OAC
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          - Sid: "AllowCloudFrontServicePrincipal"
            Action:
              - "s3:GetObject"
            Effect: "Allow"
            Resource:
              - !Sub "arn:aws:s3:::${OriginDomain}/*"
            Principal:
              Service: cloudfront.amazonaws.com
            Condition:
              StringEquals:
                AWS:SourceArn:
                  - !Join [
                      "",
                      [
                        !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/",
                        !Ref CloudFront,
                      ],
                    ]

  # CloudFront distribution
  CloudFront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: !Sub "[${Phase}] ${OriginDomain}"
        Aliases:
          - !Ref OriginDomain
        DefaultCacheBehavior:
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # Managed-CachingOptimized
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - HEAD
            - GET
            - OPTIONS
          CachedMethods:
            - HEAD
            - GET
          TargetOriginId: !Ref S3Bucket
          SmoothStreaming: false
          Compress: true
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: false
        Origins:
          - Id: !Ref S3Bucket
            DomainName: !GetAtt S3Bucket.DomainName
            OriginPath: ""
            OriginAccessControlId: !GetAtt OriginAccessControl.Id
            S3OriginConfig:
              OriginAccessIdentity: ""
        PriceClass: PriceClass_All
        ViewerCertificate:
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only
          AcmCertificateArn: !Ref CertificateArn

  OriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub ${ServiceName}-${Purpose}-${Phase}-origin-access-control
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4
